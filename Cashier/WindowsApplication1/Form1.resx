<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>